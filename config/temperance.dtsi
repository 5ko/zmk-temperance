/*
 * Copyright (c) 2024 Petko Yotov pmwiki.org/petko
 *
 * SPDX-License-Identifier: MIT
 */

#define ZMK_POINTING_DEFAULT_MOVE_VAL 600  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 6    // default: 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/pointing.h>

// HOST_OS: Linux=1, MacOS=2
#define HOST_OS 1
#include "zmk-helpers/helper.h"


// Top row HTSR
#define T4 0
#define T3 1
#define T2 2
#define T1 3

// Middle row OIEA
#define M4 4
#define M3 5
#define M2 6
#define M1 7

// Bottom row NLD_
#define B4 8
#define B3 9
#define B2 10
#define B1 11


// The layers need to be numbered in the order they are below,
// starting from zero.
#define L_BASE 0
#define L_NUM  1
#define L_PAR  2
#define L_NAV  3
#define L_ACC  4
#define L_EDT  5
#define L_FUN  6
#define L_MSE  7
#define L_BLE  8

#define ALL_LEFT L_BASE L_MSE L_BLE L_NUM L_FUN


#include "keyabbrev.dtsi"
#include "characters.dtsi"
#include "timeouts.dtsi"
#include "behaviors.dtsi"
#include "combos.dtsi"


// TODO: keymap for see keys marked TODO and MAYBE
//    HOLD: J, K, Y, Z, YEN
//    MEH key
//    Layers: Hold-S, Hold-A (accents can be removed)


#define NONE4 &none &none &none &none 
         

/ { keymap { compatible = "zmk,keymap";
  left {
    display-name = "LEFT";
    // tap-dance doesn't work with layer-hold
    // unless we use non-momentary layers?
    bindings = <
      &mt HASH  H   &lk L_NUM T   &mt STAR   S   &mt PERCENT R
      &lt L_PAR O   &mt PIPE  I   &mt EQUAL  E   &mt AT      A
      &lt L_NAV N   &kp L         &mt DOLLAR D   &kp SPACE
    >;
  };
  numbers {
    display-name = "L_NUM";
    bindings = <
      &kp N9  &kp N0  &kp DOT &kp COMMA
      &kp N5  &kp N6  &kp N7  &kp N8
      &kp N1  &kp N2  &kp N3  &kp N4
    >;
  };
  parentheses {
    display-name = "L_PAR";
    bindings = <
//       TODO      MAYBE      P_BRACES  P_PARENS
//       P_EQ_TLD  &mo L_PAR  P_LT_GT   P_BRACKETS
      NONE4
      NONE4
      NONE4
    >;
      
  };

//              
  
  navmedia {
    display-name = "L_NAV";
    bindings = <
      TODO   &mt DSK_SHOW WIN_LAST  &mt DSK_PREV WIN_PREV  &mt DSK_NEXT WIN_NEXT 
      MM_PS  MM_VD                  MM_VU                  &kp UP
      &mo L_NAV  &left_home  &right_end  &kp DOWN
    >;
  };
  accented {
    // French freq: é è à; rarer than Z: ê ç ô â î û ù ï ü ë
    // Also available on tap-dances for A, E, I, O, U (on T)
    // Also dead `´¨^ available on hold-/\VX if needed for other letters
    display-name = "L_ACC";
    bindings = <
//       A_IC_ID   A_UG_UC   A_AG_AC   &mo L_ACC
//       A_OC_UD   A_EG_ED   A_EA_EC   &none
      NONE4
      NONE4
      NONE4
    >;

  };
  editing {
    display-name = "L_EDT";
    bindings = <
//       E_SAVE   E_PASTE   E_COPY   &kp INS
//       TODO     TODO      E_UNDO   &mo L_EDT
      NONE4
      NONE4
      NONE4
    >;
  };
  functionkeys {
    display-name = "L_FUN";
    bindings = <
//       TODO   &mt F2 F1   &mt F4  F3   &mt F6  F5
//       TODO   &mt F8 F7   &mt F10 F9   &mt F12 F11
      &kp F9  &kp F10  &kp F11 &kp F12
      &kp F5  &kp F6   &kp F7  &kp F8
      &kp F1  &kp F2   &kp F3  &kp F4
    >;
  };
  mouse {
    display-name = "L_MOUSE";
    bindings = <
     M_SU   M_B2   M_MU   M_B1
     M_SD   M_ML   M_MD   M_MR
     NONE4
     
    >;
  };

  bluetooth {
    display-name = "L_BLE";
    bindings = <
      &out OUT_BLE   &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0
      &out OUT_USB   &bt BT_SEL 5  &bt BT_SEL 4  &bt BT_SEL 3
      NONE4
    >;
  };


}; };


